import os
import datetime
import telebot
from scrapper.schedule_scrapper import get_schedule_current
from redis import Redis

bot = telebot.TeleBot(os.getenv('TG_TOKEN'))

redis = Redis(host='redis')

# Vladivostok time delta
time_delta = datetime.timedelta(hours=10, minutes=0)


def set_last_update_time() -> str:
    # Current time
    time = datetime.datetime.now(datetime.timezone.utc) + time_delta
    time = time.strftime("%m-%d %H:%M:%S")

    redis.set('schedule_last_update', str(time))
    return 'OK'


@bot.message_handler(commands=["start"])
def bot_start(m, res=False):
    bot.send_message(m.chat.id, f'<b>–ü—Ä–∏–≤–µ—Ç!</b>\n–ù–∞–ø–∏—à–∏ /this_week —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é!'
                                f'\n–ò–ª–∏ /next_week - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—â—É—é –Ω–µ–¥–µ–ª—é)'
                                f'\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ <i>–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ {int(int(os.getenv("UPDATE_RATE")) / 60)} –º–∏–Ω—É—Ç,</i>'
                                f' —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ –¥–∞–∂–µ –ø—Ä–∏ –≤–Ω–µ–∑–∞–ø–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö ü§©',
                     parse_mode='HTML'
                     )


@bot.message_handler(commands=["this_week"])
def get_schedule_this(m):
    try:
        bot.send_photo(m.chat.id, photo=open('schedule.png', 'rb'),
                       caption=f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é.\n\n<b>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:\n'
                               f'{redis.get("schedule_last_update").decode("utf8")}</b>',
                       parse_mode='HTML'
                       )
    except OSError:
        bot.send_message(m.chat.id, text='–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.')


@bot.message_handler(commands=["next_week"])
def get_schedule_next(m):
    try:
        bot.send_photo(m.chat.id, photo=open('schedule-next.png', 'rb'),
                       caption=f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é.\n\n<b>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:\n'
                               f'{redis.get("schedule_last_update").decode("utf8")}</b>',
                       parse_mode='HTML'
                       )
    except OSError:
        bot.send_message(m.chat.id,
                         text='–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è. '
                              '–í–æ–∑–º–æ–∂–Ω–æ, –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –Ω–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é.'
                         )


def get_schedule_on_startup():
    """ If there is no schedule.png on bot startup it will run the scrapper. """
    if not os.path.exists(fr'{os.getcwd()}/schedule.png'):
        print('No schedule.png detected in cwd.\nStarting scrapper, usually it takes ~20 seconds.')
        get_schedule_current()
        print('Success!')


if __name__ == '__main__':
    get_schedule_on_startup()
    set_last_update_time()
    bot.polling(none_stop=True, interval=0)
